http://域名/项目名/分组名/模块名/操作名/其他参数
Tpl\User\add.html
EmptyAction URL中控制器为空
'news/:year/:month/:day/'=>'News/archive?status=1', $_GET['']到日期和status，News模块下archive方法，后面若有:1是前面输入的第一个变量
_before_index   _after_index 方法
路由规则 'u/:id'=>function($id){}
Home\Event 与Controller 同级，class UserEvent 无需use Think\Controller
A('Admin/Blog','Event') Admin 不写则默认当前模块，Event不写默认Controller
U('Blog/cate?cate_id=1&status=1') 不能用PATHINFO模式
$this->error(' 操作失败 ','/Article/error',5); success同上
I('变量类型.变量名',['默认值'],['过滤方法'],['额外数据源']) I('post.name','','MD5')
EmptyController  
UserTypeModel think_user_type
数据表名和类名不一致时，需要设置protected $tableName = 实际表名，需要前缀则设置$tablePrefix
使用 M 方法实例化 操作 db_name 数据库的 ot_user 表   $User = M('db_name.User','ot_');  跨库操作
PDO模式时 全局配置'DB_DSN' => 'mysql://root:123456@localhost:3306/thinkphp#utf8'
model 继承类单独配置protected $connection = array('db_name'=>'mysqli',...) PDO模式用字符串不用array
自建MODEL类 $scope=array('normal'=>array('where'=>'status=1')) scope(normal)->select()
$map['id'] = array('gt',100); id>100
$map['a'] =array('like',array('%thinkphp%','%tp'),'OR');
$map['id'] = array(array('gt',3),array('lt',10), 'or') 
in between exp

连贯操作 作用 支持的参数类型
where* 	用于查询或者更新条件的定义 字符串、数组和对象
table 	用于定义要操作的数据表名称 字符串和数组
alias 	用于给当前数据表定义别名 字符串
data 	用于新增或者更新数据之前的数据对象赋值 数组和对象
field 	用于定义要查询的字段（支持字段排除） 字符串和数组
order	 用于对结果排序 字符串和数组
limit 	用于限制查询结果数量 字符串和数字
page 	用于查询分页（内部会转换成limit） 字符串和数字
group 	用于对查询的group支持 字符串
having 	用于对查询的having支持 字符串
join* 	用于对查询的join支持 字符串和数组
union* 	用于对查询的union支持 字符串、数组和对象
distinct 用于查询的distinct支持 布尔值
lock 	用于数据库的锁机制 布尔值
cache 	用于查询缓存 支持多个参数
relation 用于关联查询（需要关联模型支持） 字符串
result	 用于返回数据转换 字符串
validate 用于数据自动验证 数组
auto 	用于数据自动完成 数组
filter 	用于数据过滤 字符串
scope* 	用于命名范围 字符串、数组
bind* 	用于数据绑定操作 数组或多个参数
token 	用于令牌验证 布尔值
comment 用于SQL注释 字符串

create 连贯操作
field 用于定义合法的字段 字符串和数组
validate 用于数据自动验证 数组
auto 用于数据自动完成 数组
token 用于令牌验证 布尔值

写入连贯操作连贯操作 
作用 支持的参数类型
table 用于定义要操作的数据表名称 字符串和数组
data 用于指定要写入的数据对象 数组和对象
field 用于定义要写入的字段 字符串和数组
relation 用于关联查询（需要关联模型支持） 字符串
validate 用于数据自动验证 数组
auto 用于数据自动完成 数组
filter 用于数据过滤 字符串
scope 用于命名范围 字符串、数组
bind 用于数据绑定操作 数组
token 用于令牌验证 布尔值
comment 用于SQL注释 字符串

$_validate字段
array(
2. array(验证字段1,验证规则,错误提示,[验证条件,附加规则,验证时间]),
3. array(验证字段2,验证规则,错误提示,[验证条件,附加规则,验证时间]),
4. ......
5. );

$_auto 字段 也有auto函数 create用自动处理
array(
2. array(完成字段1,完成规则,[完成条件,附加规则]),
3. array(完成字段2,完成规则,[完成条件,附加规则]),
4. ......
5. );

规则 说明
function 使用函数，表示填充的内容是一个函数名
callback 回调方法 ，表示填充的内容是一个当前模型的方法
field 用其它字段填充，表示填充的内容是一个其他字段的值
string 字符串（默认方式）
ignore 为空则忽略（3.1.2新增）

require 字段必须、email 邮箱、url URL地址、
currency 货币、number 数字
规则 说明
regex 正则验证，定义的验证规则是一个正则表达式（默认）
function 函数验证，定义的验证规则是一个函数名
callback 方法验证，定义的验证规则是当前模型类的一个方法
confirm 验证表单中的两个字段是否相同，定义的验证规则是一个字段名
equal 验证是否等于某个值，该值由前面的验证规则定义
notequal 验证是否不等于某个值，该值由前面的验证规则定义（3.1.2版本新增）
in 验证是否在某个范围内，定义的验证规则可以是一个数组或者逗号分割的字符串
notin
验证是否不在某个范围内，定义的验证规则可以是一个数组或者逗号分割的字符串
（3.1.2版本新增）
length
验证长度，定义的验证规则可以是一个数字（表示固定长度）或者数字范围（例如3,12
表示长度从3到12的范围）
between
验证范围，定义的验证规则表示范围，可以使用字符串或者数组，例如1,31或者
array(1,31)
- 159 -notbetween
验证不在某个范围，定义的验证规则表示范围，可以使用字符串或者数组（3.1.2版本新
增）
expire
验证是否在有效期，定义的验证规则表示时间范围，可以到时间，例如可以使用 2012-
1-15,2013-1-15 表示当前提交有效期在2012-1-15到2013-1-15之间，也可以使用时
间戳定义
ip_allow
验证IP是否允许，定义的验证规则表示允许的IP地址列表，用逗号分隔，例如
201.12.2.5,201.12.2.6
ip_deny
验证IP是否禁止，定义的验证规则表示禁止的ip地址列表，用逗号分隔，例如
201.12.2.5,201.12.2.6
unique
验证是否唯一，系统会根据字段目前的值查询数据库来判断是否存在相同的值，当表单
数据中包含主键字段时unique不可用于判断主键字段本身

验证时间（可选）
self::MODEL_INSERT或者1新增数据时候验证
self::MODEL_UPDATE或者2编辑数据时候验证
self::MODEL_BOTH或者3全部情况下验证（默认）

validate($rules)动态验证
<include file="Public/header,Public/menu" />
qgstupid